<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--主配置文件-->
<configuration>


    <!-- 配置数据库连接信息-->
    <properties resource="jdbc.properties"></properties>
    <!--配置环境  default 和 id 一致 用于解释 default  -->
    
    <!-- 配置参数
    开启延迟加载
    -->
    <settings>
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    
    <!-- 用于起别名 -->
    <typeAliases>
        <!-- 将User对象 起别名 作为user 则只需要通过别名就可以取代全限定类名
        只能用于指定单个类
        -->
<!--        <typeAlias type="zzc.ssm.mybaits.domain.Users" alias="user"/>-->
        <!-- package指定包下的别名 ， 类名就是别名不区分大小写
         这里用于指定多个文件的时候
         -->
        <package name="zzc.ssm.mybaits.domain"/>
    </typeAliases>
    <environments default="mysql">

        <!--配置MYSQL的环境-->
        <environment id="mysql">
            <!--配置事物类型-->
            <transactionManager type="jdbc"></transactionManager>
            <!--配置数据源即连接池
                通过type 属性表示采用的连接池方式：
                    POOLED ： 采用传统的javax.sql.datasource规范中的连接池
                    UNPOOLED：传统的连接方式，不采用连接池思想直接创建新的连接对象
                    JNDI : 采用服务器提供的JNDI技术实现，来获取DataSource对象，不同服务器拿到的DataSource不同
                     不是war工程不能使用。Tomcat采用的是dbcp连接池.
            -->
            
            <!-- 采用mybaits自带的POOLED连接池 -->
<!--            <dataSource type="POOLED">-->
<!--                &lt;!&ndash;配置连接信息,也就是连接参数 driver url user pasword&ndash;&gt;-->
<!--                <property name="driver" value="${jdbc.driver}"/>-->
<!--                &lt;!&ndash;需要配置对应的字符集，避免中文乱码&ndash;&gt;-->
<!--                <property name="url" value="${jdbc.url}"/>-->
<!--                <property name="username" value="${jdbc.username}"/>-->
<!--                <property name="password" value="${jdbc.password}"/>-->
<!--            </dataSource>-->
            
            <!-- 自定义数据库连接池
                name data_source value前面几个值是固定的
                即java:comp/env是固定的 后面的jdbc/mysql是指定的Resource配置的name属性
            -->
            <!-- 注意采用JDNI只能在war包编译下使用-->
            <dataSource type="JNDI">
                <property name="data_source" value="java:comp/env/jdbc/mysql"/>
            </dataSource>
            
        </environment>
    </environments>
    <!--指定映射配置文件的位置，映射配置文件指的的每个dao的独立的配置文件-->
    <mappers>
        <!--如果利用注解的方式 则不用resource进行配置 而采用Class属性进行配置-->
<!--        <mapper resource="zzc/ssm/mybaits/dao/IUserMapper.xml" />-->
        <!-- 通过起别名可 以不用再写class 或者 rescource 以及mapper都不用写只需要指明dao即可-->
        <package name="zzc.ssm.mybaits.dao"/>
    </mappers>
</configuration>