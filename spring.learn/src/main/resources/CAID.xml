<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!-- 配置DAO 基于继承jdbcTemplate的开发
只需要配置数据源即可
-->
    <bean id="userDao" class="spring.jdbctemplate.dao.impl.UserDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--    &lt;!&ndash; 配置jdbcTemplate &ndash;&gt;-->
    <!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
    <!--        <property name="dataSource" ref="dataSource"></property>-->
    <!--    </bean>-->
    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/school?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        <property name="username" value="test"></property>
        <property name="password" value="123456"></property>
    </bean>

    <!-- spring中基于xml的声明式事务控制配置步骤
        1.配置事务管理器 <org.springframework.jdbc.datasource.DataSourceTransactionManager>
        2.配置事务的通知
            需要导入事务的约束:tx名称空间和约束
            使用tx:advice配置事务通知
                属性：
                    id:给事务设置唯一标志
                    transaction-manager：给事务通知配置事务管理器
        3.配置AOP的通用切入点表达式
        4.建立事务通知和切入点表达式的对应关系
        5.配置事务的属性
            tx:advice内进行事务的配置
    -->
    <!-- 配置事务管理器 -->
    <bean id="transctionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transctionManager">
        <tx:attributes>
            <!--
            name：配置的方法名称.
            isolation 指定事务的隔离级别 默认是数据库隔离级别
            no-rollback-for:用于指定一个异常，当产生这个异常的时候，事务不回滚，产生其它异常事务回滚。没有默认值表示所有异常都回滚
            rollback-for:用于指定一个异常，当产生这个异常的时候，事务回滚，产生其它异常事务不回滚。没有默认值表示所有异常都回滚
            propagation:指定事务的传播行为，默认值是REQUIRED表示一定会有事务，而SUPPORTS则表示没有事务
            timeout:用于指定事务超时时间，默认-1，永不超时.
            -->
            <tx:method name="find*" />
        </tx:attributes>
    </tx:advice>
    <!--配置aop-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* spring.aop.service.impl.IAccountServiceImpl.*(..))"/>
        <!-- 建立切入点表达式和事务通知的关系 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>
</beans>